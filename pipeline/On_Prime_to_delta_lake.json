{
	"name": "On_Prime_to_delta_lake",
	"properties": {
		"description": "This pipeline is to ingest the data from sql server and then transform the data as per requirement then loaded into snowflake.",
		"activities": [
			{
				"name": "Lookupforconfigtable",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerConfigTableDS",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "loopeverytable",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookupforconfigtable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookupforconfigtable').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data to bronze from sql server",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AvroSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "AvroWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "SqlServerTablesDS",
									"type": "DatasetReference",
									"parameters": {
										"schema_name": {
											"value": "@item().schema_name",
											"type": "Expression"
										},
										"table_name": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "SinkAvroDS",
									"type": "DatasetReference",
									"parameters": {
										"schema_name": {
											"value": "@item().schema_name",
											"type": "Expression"
										},
										"table_name": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Copy data to archive from bronze",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "loopeverytable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AvroSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": "*",
							"wildcardFileName": "*",
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SrcAvroDS",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ParquetSinkDS",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "bronze to silver",
				"description": "dropping nulls and dups",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Copy data to archive from bronze",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/yashwardhan02@outlook.com/AdventureWorks/bronze to silver"
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricksLS",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "silver to gold",
				"description": "applying business logic on silver layer then loaded into delta lake",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "bronze to silver",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/yashwardhan02@outlook.com/AdventureWorks/silver to gold(delta tables)"
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricksLS",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Send notification to mail",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "silver to gold",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Content-Type": "Application/json"
					},
					"url": "https://prod-00.southindia.logic.azure.com:443/workflows/18f90761e6ea4253ab770f61f7ef1a20/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=SOqQWWYBX5HZ5Rs9vgrzyE8sXjte4ZEvmfzXuPgU4Tg",
					"body": {
						"value": "{\n    \"pipeline\":\"@{pipeline().Pipeline}\",\n    \"ErrorMessage\":\"@{activity('silver to gold').output}\",\n    \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n    \"RunId\":\"@{pipeline()?.TriggeredByPipelineRunId}\"\n}",
						"type": "Expression"
					}
				}
			}
		],
		"folder": {
			"name": "AdventureWorks"
		},
		"annotations": []
	}
}